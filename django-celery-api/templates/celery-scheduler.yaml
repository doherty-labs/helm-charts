apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.celery.scheduler.name }}-deployment"
  namespace: default
  labels:
    app: "{{ .Values.celery.scheduler.name }}"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: "{{ .Values.celery.scheduler.name }}"
  template:
    metadata:
      labels:
        app: "{{ .Values.celery.scheduler.name }}"
    spec:
      volumes:
        - name: celery-logs
          hostPath:
            path: /var/logs/celery-worker/
      terminationGracePeriodSeconds: 10
      containers:
        - name: celery-scheduler-docker-image
          image: "{{ .Values.celery.scheduler.image.repository }}:{{ .Values.celery.scheduler.image.tag }}"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: celery-logs
              mountPath: /logs/
          {{- with .Values.service.resources }}
            resources:
              {{- toYaml . | nindent 6 }}
          {{- end }}
          readinessProbe:
            exec:
              command: ["python", "./django/django_project/celery_readiness.py"]
            initialDelaySeconds: 120
            periodSeconds: 300
          env:
            {{- include ".Values.celery.scheduler.env" . | nindent 6 }}
